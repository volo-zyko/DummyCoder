<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="s_ST_Lang">
    <data type="string"/>
  </define>
  <define name="s_ST_HexColorRGB">
    <data type="hexBinary">
      <param name="length">3</param>
    </data>
  </define>
  <define name="s_ST_Panose">
    <data type="hexBinary">
      <param name="length">10</param>
    </data>
  </define>
  <define name="s_ST_CalendarType">
    <choice>
      <value type="string" datatypeLibrary="">gregorian</value>
      <value type="string" datatypeLibrary="">gregorianUs</value>
      <value type="string" datatypeLibrary="">gregorianMeFrench</value>
      <value type="string" datatypeLibrary="">gregorianArabic</value>
      <value type="string" datatypeLibrary="">hijri</value>
      <value type="string" datatypeLibrary="">hebrew</value>
      <value type="string" datatypeLibrary="">taiwan</value>
      <value type="string" datatypeLibrary="">japan</value>
      <value type="string" datatypeLibrary="">thai</value>
      <value type="string" datatypeLibrary="">korea</value>
      <value type="string" datatypeLibrary="">saka</value>
      <value type="string" datatypeLibrary="">gregorianXlitEnglish</value>
      <value type="string" datatypeLibrary="">gregorianXlitFrench</value>
      <value type="string" datatypeLibrary="">none</value>
    </choice>
  </define>
  <define name="s_ST_AlgClass">
    <choice>
      <value type="string" datatypeLibrary="">hash</value>
      <value type="string" datatypeLibrary="">custom</value>
    </choice>
  </define>
  <define name="s_ST_CryptProv">
    <choice>
      <value type="string" datatypeLibrary="">rsaAES</value>
      <value type="string" datatypeLibrary="">rsaFull</value>
      <value type="string" datatypeLibrary="">custom</value>
    </choice>
  </define>
  <define name="s_ST_AlgType">
    <choice>
      <value type="string" datatypeLibrary="">typeAny</value>
      <value type="string" datatypeLibrary="">custom</value>
    </choice>
  </define>
  <define name="s_ST_ColorType">
    <data type="string"/>
  </define>
  <define name="s_ST_Guid">
    <data type="token">
      <param name="pattern">\{[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}\}</param>
    </data>
  </define>
  <define name="s_ST_OnOff">
    <choice>
      <data type="boolean"/>
      <ref name="s_ST_OnOff1"/>
    </choice>
  </define>
  <define name="s_ST_OnOff1">
    <choice>
      <value type="string" datatypeLibrary="">on</value>
      <value type="string" datatypeLibrary="">off</value>
    </choice>
  </define>
  <define name="s_ST_String">
    <data type="string"/>
  </define>
  <define name="s_ST_TrueFalse">
    <choice>
      <value type="string" datatypeLibrary="">t</value>
      <value type="string" datatypeLibrary="">f</value>
      <value type="string" datatypeLibrary="">true</value>
      <value type="string" datatypeLibrary="">false</value>
    </choice>
  </define>
  <define name="s_ST_TrueFalseBlank">
    <choice>
      <value type="string" datatypeLibrary="">t</value>
      <value type="string" datatypeLibrary="">f</value>
      <value type="string" datatypeLibrary="">true</value>
      <value type="string" datatypeLibrary="">false</value>
      <value type="string" datatypeLibrary=""/>
      <value type="string" datatypeLibrary="">True</value>
      <value type="string" datatypeLibrary="">False</value>
    </choice>
  </define>
  <define name="s_ST_UnsignedDecimalNumber">
    <data type="unsignedLong"/>
  </define>
  <define name="s_ST_TwipsMeasure">
    <choice>
      <ref name="s_ST_UnsignedDecimalNumber"/>
      <ref name="s_ST_PositiveUniversalMeasure"/>
    </choice>
  </define>
  <define name="s_ST_VerticalAlignRun">
    <choice>
      <value type="string" datatypeLibrary="">baseline</value>
      <value type="string" datatypeLibrary="">superscript</value>
      <value type="string" datatypeLibrary="">subscript</value>
    </choice>
  </define>
  <define name="s_ST_Xstring">
    <data type="string"/>
  </define>
  <define name="s_ST_XAlign">
    <choice>
      <value type="string" datatypeLibrary="">left</value>
      <value type="string" datatypeLibrary="">center</value>
      <value type="string" datatypeLibrary="">right</value>
      <value type="string" datatypeLibrary="">inside</value>
      <value type="string" datatypeLibrary="">outside</value>
    </choice>
  </define>
  <define name="s_ST_YAlign">
    <choice>
      <value type="string" datatypeLibrary="">inline</value>
      <value type="string" datatypeLibrary="">top</value>
      <value type="string" datatypeLibrary="">center</value>
      <value type="string" datatypeLibrary="">bottom</value>
      <value type="string" datatypeLibrary="">inside</value>
      <value type="string" datatypeLibrary="">outside</value>
    </choice>
  </define>
  <define name="s_ST_ConformanceClass">
    <choice>
      <value type="string" datatypeLibrary="">strict</value>
      <value type="string" datatypeLibrary="">transitional</value>
    </choice>
  </define>
  <define name="s_ST_UniversalMeasure">
    <data type="string">
      <param name="pattern">-?[0-9]+(\.[0-9]+)?(mm|cm|in|pt|pc|pi)</param>
    </data>
  </define>
  <define name="s_ST_PositiveUniversalMeasure">
    <data type="string">
      <param name="pattern">-?[0-9]+(\.[0-9]+)?(mm|cm|in|pt|pc|pi)</param>
      <param name="pattern">[0-9]+(\.[0-9]+)?(mm|cm|in|pt|pc|pi)</param>
    </data>
  </define>
  <define name="s_ST_Percentage">
    <data type="string">
      <param name="pattern">-?[0-9]+(\.[0-9]+)?%</param>
    </data>
  </define>
  <define name="s_ST_FixedPercentage">
    <data type="string">
      <param name="pattern">-?[0-9]+(\.[0-9]+)?%</param>
      <param name="pattern">-?((100)|([0-9][0-9]?))(\.[0-9][0-9]?)?%</param>
    </data>
  </define>
  <define name="s_ST_PositivePercentage">
    <data type="string">
      <param name="pattern">-?[0-9]+(\.[0-9]+)?%</param>
      <param name="pattern">[0-9]+(\.[0-9]+)?%</param>
    </data>
  </define>
  <define name="s_ST_PositiveFixedPercentage">
    <data type="string">
      <param name="pattern">-?[0-9]+(\.[0-9]+)?%</param>
      <param name="pattern">((100)|([0-9][0-9]?))(\.[0-9][0-9]?)?%</param>
    </data>
  </define>
</grammar>
